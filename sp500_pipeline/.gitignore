# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/version info into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
# db.sqlite3 # Comentado porque para este desafío podrías querer versionar tu .db
# db.sqlite3-journal # Comentado por la misma razón que db.sqlite3

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints
# notebooks/.ipynb_checkpoints # Específico para tu estructura si tienes notebooks/

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
# Pipfile.lock

# PEP 582; remove simplejson to prevent shadowing stdlib json
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv/
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site/

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static checker
.pytype/

# Cython debug symbols
cython_debug/

# VSCode (configuraciones locales del editor)
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# SQLite database (OPCIONAL: decide si quieres versionar tu .db)
# Si NO quieres versionarlo (recomendado para bases de datos grandes o que cambian mucho):
# data/*.db
# data/*.db-journal


# Archivos de Power BI temporales o de copia de seguridad
# (Power BI a veces crea estos al abrir o trabajar con .pbix)
# reports/*.pbix.backup
# reports/*~.pbix

# Archivos específicos de macOS
.DS_Store
.AppleDouble
.LSOverride

# Archivos específicos de Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Archivos de configuración local (si llegaras a tenerlos)
# local_config.py